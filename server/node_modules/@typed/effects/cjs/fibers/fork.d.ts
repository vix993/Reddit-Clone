import { Resume } from '@typed/env';
import { Capabilities, Effects, Return } from '../Effect';
import { Fiber, FiberFailure } from './Fiber';
export declare type Fork = {
    readonly fork: <A extends Effects>(effect: A, c: Capabilities<A> & FiberFailure) => Resume<Fiber<Return<A>>>;
};
export declare const Fork: {
    fork: <A extends Effects<any, any>>(effect: A, c: Capabilities<A> & import("../failures").FailEnv<typeof FiberFailure, Error>) => Resume<Fiber<Return<A>>>;
};
export declare function fork<A extends Effects>(effect: A): Effects<Capabilities<A> & Fork & FiberFailure, Fiber<Return<A>>>;
//# sourceMappingURL=fork.d.ts.map