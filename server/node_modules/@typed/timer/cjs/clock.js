"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createClock = exports.createRelativeClock = void 0;
const common_1 = require("@typed/common");
/** Create a clock relative to the current time */
exports.createRelativeClock = (clock) => new RelativeClock(clock, clock.currentTime());
exports.createClock = () => {
    const clock = common_1.isBrowser
        ? { currentTime: () => performance.now() }
        : new HRTimeClock(process.hrtime, process.hrtime());
    const relative = exports.createRelativeClock(clock);
    return relative;
};
// tslint:disable-next-line:max-classes-per-file
class RelativeClock {
    constructor(clock, origin) {
        this.clock = clock;
        this.origin = origin;
        this.currentTime = () => {
            return this.clock.currentTime() - this.origin;
        };
    }
}
// tslint:disable-next-line:max-classes-per-file
class HRTimeClock {
    constructor(hrtime, origin) {
        this.hrtime = hrtime;
        this.origin = origin;
    }
    currentTime() {
        const hrt = this.hrtime(this.origin);
        return (hrt[0] * 1e9 + hrt[1]) / 1e6;
    }
}
//# sourceMappingURL=clock.js.map