import { isLeft } from './Either';
import { curry } from '@typed/lambda';
import { fromLeft } from './Left';
/**
 * Returns a `Either` that is the result of calling `f` with the rejected
 * value of another `Either`.
 * @name chainLeft<A, B, C>(f: (value: B) => Either<C, B>, either: Either<A, B>): Either<A C>
 */
export const chainLeft = curry(__chainLeft);
function __chainLeft(f, either) {
    return isLeft(either) ? f(fromLeft(either)) : either;
}
//# sourceMappingURL=chainLeft.js.map