import { Left, LEFT } from './Left';
import { Right, RIGHT } from './Right';
export var Either;
(function (Either) {
    /**
     * Creates an Either<A, B> that is of type Right<B>
     * @name Either.of<A>(value: A): Either<B, A>
     */
    Either.of = Right.of;
    /**
     * Creates an Either<A, B> that is of type Left<A>
     * @name Either.left<A>(value: A): Either<A, B>
     */
    Either.left = Left.of;
})(Either || (Either = {}));
/**
 * Returns true if an Either<A, B> is type Left<A>
 * @name isLeft<A, B>(either: Either<A, B>): Either is Left<A>
 */
export function isLeft(either) {
    return either.hasOwnProperty(LEFT);
}
/**
 * Returns true if an Either<A, B> is type Right<B>
 * @name isRight<A, B>(either: Either<A, B>): either is Right<B>
 */
export function isRight(either) {
    return either.hasOwnProperty(RIGHT);
}
//# sourceMappingURL=Either.js.map