import { curry } from '@typed/lambda';
import { Maybe, Nothing } from '@typed/maybe';
/**
 * Find a value in an array-like starting from the end of the array-like
 * @param predicate :: (a -> boolean)
 * @param list :: [a]
 * @returns :: Maybe a
 */
export const findLast = curry(__findLast);
function __findLast(predicate, list) {
    for (let i = list.length - 1; i >= 0; --i) {
        const value = list[i];
        if (predicate(value)) {
            return Maybe.of(value);
        }
    }
    return Nothing;
}
//# sourceMappingURL=index.js.map