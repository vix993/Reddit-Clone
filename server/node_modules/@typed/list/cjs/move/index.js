"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.move = void 0;
const lambda_1 = require("@typed/lambda");
const logic_1 = require("@typed/logic");
const math_1 = require("@typed/math");
/**
 * Move a value from one index to another
 * @param fromIndex :: int
 * @param toIndex :: int
 * @param list :: [a]
 * @returns :: [a]
 */
exports.move = lambda_1.curry(__move);
function __move(fromIndex, toIndex, list) {
    const length = list.length;
    const newArray = Array(length);
    if (outOfBounds(length, toIndex) || outOfBounds(length, fromIndex)) {
        return Array.from(list);
    }
    for (let i = 0; i < length; ++i) {
        newArray[i] = list[findMovedIndex(i, fromIndex, toIndex)];
    }
    return newArray;
}
function findMovedIndex(i, fromIndex, toIndex) {
    if (logic_1.equals(i, toIndex)) {
        return fromIndex;
    }
    return logic_1.ifElse(() => logic_1.lessThan(toIndex, fromIndex), logic_1.ifElse(between(fromIndex, toIndex), lambda_1.id, math_1.increment), logic_1.ifElse(between(toIndex, fromIndex), lambda_1.id, math_1.decrement), i);
}
function outOfBounds(length, value) {
    return value < 0 || value >= length;
}
function between(min, max) {
    return logic_1.or(logic_1.lessThan(min), logic_1.greaterThan(max));
}
//# sourceMappingURL=index.js.map