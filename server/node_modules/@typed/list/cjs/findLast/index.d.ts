import { Predicate } from '@typed/lambda';
import { Maybe } from '@typed/maybe';
import { NoInfer } from '../NoInfer';
/**
 * Find a value in an array-like starting from the end of the array-like
 * @param predicate :: (a -> boolean)
 * @param list :: [a]
 * @returns :: Maybe a
 */
export declare const findLast: {
    <A>(predicate: Predicate<NoInfer<A>>, list: ArrayLike<A>): Maybe<A>;
    <A>(predicate: Predicate<A>): (list: ArrayLike<A>) => Maybe<A>;
};
//# sourceMappingURL=index.d.ts.map