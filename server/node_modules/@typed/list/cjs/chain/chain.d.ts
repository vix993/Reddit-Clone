import { Arity2 } from '@typed/lambda';
/**
 * Combine a list of lists together by applying a function to
 * the values contained in a list.
 * @param fn :: (a -> [b])
 * @param list :: [a]
 * @returns :: [b]
 */
export declare const chain: {
    <A, B>(fn: Arity2<A, number, readonly B[]>, list: readonly A[]): B[];
    <A_1, B_1>(fn: Arity2<A_1, number, readonly B_1[]>): (list: readonly A_1[]) => B_1[];
};
/**
 * Flatten a list of lists with a depth of 1.
 * @param nestedList :: [[a]]
 * @returns:: [a]
 */
export declare function unnest<A>(nestedList: ReadonlyArray<ReadonlyArray<A>>): A[];
//# sourceMappingURL=chain.d.ts.map