import { toString } from '@typed/common';
/**
 * Memoize a function
 * @param f Function to memoize
 */
export const memoize = (f) => {
    const cache = new Map();
    return ((...args) => {
        const key = args.reduce((x, y) => x + toString(y), '');
        if (cache.has(key)) {
            return cache.get(key);
        }
        let result = f(...args);
        if (typeof result === 'function') {
            result = memoize(result);
        }
        cache.set(key, result);
        return result;
    });
};
//# sourceMappingURL=memoize.js.map