/**
 * Returns true if a property is equal to a given value
 * @param key :: PropertyKey
 * @param value :: a
 * @param obj :: { [PropertyKey]: a }
 * @returns :: boolean
 */
export declare const propEq: {
    <K extends string | number | symbol, A, O extends Readonly<Record<K, A>>>(key: K, value: A, object: O): boolean;
    <K_1 extends string | number | symbol, A_1>(key: K_1, value: A_1): <O_1 extends Readonly<Record<K_1, A_1>>>(object: O_1) => boolean;
    <K_2 extends string | number | symbol>(key: K_2): {
        <A_2, O_2 extends Readonly<Record<K_2, A_2>>>(value: A_2, object: O_2): boolean;
        <A_3>(value: A_3): <O_3 extends Readonly<Record<K_2, A_3>>>(object: O_3) => boolean;
    };
};
//# sourceMappingURL=propEq.d.ts.map