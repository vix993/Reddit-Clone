import { Arity1, Is, Predicate } from '@typed/lambda';
import { Maybe } from '@typed/maybe';
export interface Match<A, B> extends Arity1<A, Maybe<B>> {
}
export declare namespace Match {
    const map: {
        <A, B, C>(fn: (value: B) => C, match: Match<A, B>): Match<A, C>;
        <B_1, C_1>(fn: (value: B_1) => C_1): <A_1>(match: Match<A_1, B_1>) => Match<A_1, C_1>;
    };
    function fromPredicate<A>(predicate: Predicate<A>): Match<A, A>;
    function fromPredicate<A, B>(predicate: Is<B>): Match<A, B>;
}
//# sourceMappingURL=types.d.ts.map