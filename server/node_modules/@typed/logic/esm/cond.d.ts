import { Predicate } from '@typed/lambda';
import { Maybe } from '@typed/maybe';
/**
 * Basic pattern matching
 * @param conditionals :: [((a -> boolean), (a -> b))]
 * @param value :: a
 * @returns :: Maybe b
 */
export declare const cond: {
    <A, B>(conditions: ReadonlyArray<Conditional<A, B>>, value: A): Maybe<B>;
    <A, B>(conditions: ReadonlyArray<Conditional<A, B>>): (value: A) => Maybe<B>;
};
/**
 * @name Conditional
 * @type
 */
export declare type Conditional<A, B> = [Predicate<A>, (value: A) => B];
//# sourceMappingURL=cond.d.ts.map