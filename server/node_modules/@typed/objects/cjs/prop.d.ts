import { Maybe } from '@typed/maybe';
/**
 * Get a value from an object.
 */
export declare const prop: {
    <K extends string | number | symbol, O extends Partial<{ [_ in K]: any; }>>(key: K, obj: O): Maybe<O[K]>;
    <K_1 extends string | number | symbol>(key: K_1): <O_1 extends Partial<{ [__1 in K_1]: any; }>>(obj: O_1) => Maybe<O_1[K_1]>;
};
export declare const propOf: {
    <K extends string | number | symbol, O extends Record<K, any>>(key: K, obj: O): O[K];
    <K_1 extends string | number | symbol>(key: K_1): <O_1 extends Record<K_1, any>>(obj: O_1) => O_1[K_1];
};
//# sourceMappingURL=prop.d.ts.map