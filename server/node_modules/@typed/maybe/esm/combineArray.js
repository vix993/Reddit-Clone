import { curry } from '@typed/lambda';
import { fromJust } from './fromJust';
import { isNothing } from './isNothing';
import { Just } from './Just';
import { Nothing } from './Nothing';
/**
 * Applies a function with all of the values contained in an array of `Maybe`s.
 * If *any* of the `Maybe`s are `Nothing`s then `Nothing` is returned.
 * @name combineArray<R>(f: (...values: Array<any>) => R, maybes: ReadonlyArray<Maybe<any>>): R
 */
export const combineArray = curry(__combineArray);
function __combineArray(f, maybes) {
    const containsNothing = maybes.some(isNothing);
    return containsNothing
        ? Nothing
        : Just.of(f(...maybes.map(fromJust)));
}
//# sourceMappingURL=combineArray.js.map