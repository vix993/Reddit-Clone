import { Maybe } from './Maybe';
/**
 * Applies a function with the values contained in 2 `Maybes` if both are
 * `Just`s. If either `Maybe`s are `Nothing` then `Nothing` is returned.
 * @name combine<A, B, C>(f: (a: A, b: B) => C, a: Maybe<A>, b: Maybe<B>): Maybe<C>
 */
export declare const combine: {
    <A, B, C>(f: (valueA: A, valueB: B) => C, maybeA: Maybe<A>, maybeB: Maybe<B>): Maybe<C>;
    <A_1, B_1, C_1>(f: (valueA: A_1, valueB: B_1) => C_1, maybeA: Maybe<A_1>): (maybeB: Maybe<B_1>) => Maybe<C_1>;
    <A_2, B_2, C_2>(f: (valueA: A_2, valueB: B_2) => C_2): {
        (maybeA: Maybe<A_2>, maybeB: Maybe<B_2>): Maybe<C_2>;
        (maybeA: Maybe<A_2>): (maybeB: Maybe<B_2>) => Maybe<C_2>;
    };
};
//# sourceMappingURL=combine.d.ts.map